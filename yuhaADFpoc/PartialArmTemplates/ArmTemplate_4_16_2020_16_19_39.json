{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "yuhaADFpoc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Stage1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ParamsLookup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SanityCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ParamsDataset",
								"type": "DatasetReference",
								"parameters": {
									"paramFilePath": {
										"value": "@pipeline().parameters.ParamFilePath",
										"type": "Expression"
									},
									"paramFileName": {
										"value": "@pipeline().parameters.ParamFileName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "SanityCheck",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "BlobValidator",
							"method": "GET",
							"headers": {
								"fileName": {
									"value": "@pipeline().parameters.FileName",
									"type": "Expression"
								},
								"filePath": {
									"value": "@pipeline().parameters.FilePath",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sanity Error Mail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SanityCheck",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Email Pusher",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "yuhajobs@gmail.com",
								"Subject": "Stage 1 Sanity Failed",
								"ErrorMessage": {
									"value": "@activity('SanityCheck').Error.Message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Raw Hive loading",
						"type": "HDInsightHive",
						"dependsOn": [
							{
								"activity": "ParamsLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": {
								"value": "@activity('ParamsLookup').output.value[0].hiveLoc",
								"type": "Expression"
							},
							"defines": {
								"srcfilelocation": {
									"value": "@concat(activity('ParamsLookup').output.value[0].hiveSourcePath,'/',pipeline().parameters.FileName)",
									"type": "Expression"
								},
								"loaddate": {
									"value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
									"type": "Expression"
								}
							},
							"scriptLinkedService": {
								"referenceName": "pharmacypocADLSconn",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "SparkClusterConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Trigger Creation",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Raw Hive loading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TriggerCreation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"TriggerLoc": {
									"value": "@activity('ParamsLookup').output.value[0].triggerLoc",
									"type": "Expression"
								},
								"FileNamePrefix": {
									"value": "@first(split(last(split(activity('SanityCheck').output.map.fullFilename,'/')),'.'))",
									"type": "Expression"
								},
								"SourcePath": {
									"value": "@activity('ParamsLookup').output.value[0].curationSrcPath",
									"type": "Expression"
								},
								"TargetPath": {
									"value": "@activity('ParamsLookup').output.value[0].curationDestPath",
									"type": "Expression"
								},
								"SourceTable": {
									"value": "@activity('ParamsLookup').output.value[0].srcTbl",
									"type": "Expression"
								},
								"TargetTable": {
									"value": "@activity('ParamsLookup').output.value[0].tgtTbl",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Stage 1 Success Mail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Trigger Creation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Email Pusher",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "yuhajobs@gmail.com",
								"Subject": "Stage 1 Success",
								"ErrorMessage": {
									"value": "@pipeline().TriggerName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Stage 1 Failed Mail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Trigger Creation",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Email Pusher",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "yuhajobs@gmail.com",
								"Subject": "Stage 1 Failed",
								"ErrorMessage": {
									"value": "@activity('Raw Hive loading').Error.Message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					},
					"ParamFilePath": {
						"type": "string"
					},
					"ParamFileName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stage2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Curation Loading",
						"type": "HDInsightSpark",
						"dependsOn": [
							{
								"activity": "ParamsLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"rootPath": "jars",
							"entryFilePath": "azureCuration-1.0-SNAPSHOT.jar",
							"arguments": [
								"@activity('ParamsLookup').output.value[0].srcTbl",
								"@activity('ParamsLookup').output.value[0].tgtTbl",
								"@activity('ParamsLookup').output.value[0].tgtPath",
								"@formatDateTime(utcnow(),'yyyy-MM-dd')"
							],
							"className": "com.prad.legend.blooper",
							"sparkJobLinkedService": {
								"referenceName": "pharmacypocblobconn",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "SparkClusterConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ParamsLookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ParamsDataset",
								"type": "DatasetReference",
								"parameters": {
									"paramFilePath": {
										"value": "@pipeline().parameters.ParamPath",
										"type": "Expression"
									},
									"paramFileName": {
										"value": "@pipeline().parameters.ParamName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Stage 2 Success Mail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Curation Loading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Email Pusher",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "yuhajobs@gmail.com",
								"Subject": "Stage 2 Success",
								"ErrorMessage": {
									"value": "@pipeline().TriggerName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"ParamPath": {
						"type": "string"
					},
					"ParamName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}