{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "yuhaADFpoc"
		},
		"AzureFunctionConn_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunctionConn'"
		},
		"HDIClusterconn_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HDIClusterconn'"
		},
		"SparkClusterConn_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SparkClusterConn'"
		},
		"pharmacypocblobconn_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'pharmacypocblobconn'"
		},
		"HDIClusterconn_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		},
		"SparkClusterConn_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		},
		"keyvaultPOCconn_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://yuhaKeyVaultpoc.vault.azure.net/"
		},
		"pharmacypocADLSconn_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://yuhaadlspoc.dfs.core.windows.net/"
		},
		"casesTrigger_properties_Stage1_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"casesTrigger_properties_Stage1_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"casesTrigger_properties_Stage1_parameters_ParamFilePath": {
			"type": "string",
			"defaultValue": "pharmacypoc/params/raw"
		},
		"casesTrigger_properties_Stage1_parameters_ParamFileName": {
			"type": "string",
			"defaultValue": "cases_params.csv"
		},
		"casesTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/4252b742-3cd4-47a1-af43-30bb66d77529/resourceGroups/yuhaPOC/providers/Microsoft.Storage/storageAccounts/yuhaadlspoc"
		},
		"curationcasestrigger_properties_Stage2_parameters_ParamPath": {
			"type": "string",
			"defaultValue": "pharmacypoc/params/curation"
		},
		"curationcasestrigger_properties_Stage2_parameters_ParamName": {
			"type": "string",
			"defaultValue": "cases_params.csv"
		},
		"curationcasestrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/4252b742-3cd4-47a1-af43-30bb66d77529/resourceGroups/yuhaPOC/providers/Microsoft.Storage/storageAccounts/yuhaadlspoc"
		},
		"deathsTrigger_properties_Stage1_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"deathsTrigger_properties_Stage1_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"deathsTrigger_properties_Stage1_parameters_ParamFilePath": {
			"type": "string",
			"defaultValue": "pharmacypoc/params/raw"
		},
		"deathsTrigger_properties_Stage1_parameters_ParamFileName": {
			"type": "string",
			"defaultValue": "deaths_params.csv"
		},
		"deathsTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/4252b742-3cd4-47a1-af43-30bb66d77529/resourceGroups/yuhaPOC/providers/Microsoft.Storage/storageAccounts/yuhaadlspoc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Email Pusher')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Send Mail",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-09.southeastasia.logic.azure.com:443/workflows/97ec2177ca3b49e39ad8cd1cfdf3c9cd/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=AnvYfNw5jDJsCzFMJ4ICfVb4iOM_rxWH1QS8ufxkHjc",
							"method": "POST",
							"headers": {},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "@{pipeline().parameters.Subject}",
								"ErrorMessage": "@{pipeline().parameters.ErrorMessage}",
								"EmailTo": "@pipeline().parameters.EmailTo"
							}
						}
					}
				],
				"parameters": {
					"EmailTo": {
						"type": "string"
					},
					"Subject": {
						"type": "string"
					},
					"ErrorMessage": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stage1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ParamsLookup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SanityCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ParamsDataset",
								"type": "DatasetReference",
								"parameters": {
									"paramFilePath": {
										"value": "@pipeline().parameters.ParamFilePath",
										"type": "Expression"
									},
									"paramFileName": {
										"value": "@pipeline().parameters.ParamFileName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "SanityCheck",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "BlobValidator",
							"method": "GET",
							"headers": {
								"fileName": {
									"value": "@pipeline().parameters.FileName",
									"type": "Expression"
								},
								"filePath": {
									"value": "@pipeline().parameters.FilePath",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunctionConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sanity Error Mail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SanityCheck",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Email Pusher",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "yuhajobs@gmail.com",
								"Subject": "ADF Pipeline Failed",
								"ErrorMessage": {
									"value": "@activity('SanityCheck').Error.Message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Raw Hive loading",
						"type": "HDInsightHive",
						"dependsOn": [
							{
								"activity": "ParamsLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": {
								"value": "@activity('ParamsLookup').output.value[0].hiveLoc",
								"type": "Expression"
							},
							"defines": {
								"srcfilelocation": {
									"value": "@concat(activity('ParamsLookup').output.value[0].hiveSourcePath,'/',pipeline().parameters.FileName)",
									"type": "Expression"
								},
								"loaddate": {
									"value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
									"type": "Expression"
								}
							},
							"scriptLinkedService": {
								"referenceName": "pharmacypocADLSconn",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "SparkClusterConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Trigger Creation",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Raw Hive loading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TriggerCreation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"TriggerLoc": {
									"value": "@activity('ParamsLookup').output.value[0].triggerLoc",
									"type": "Expression"
								},
								"RawFileName": {
									"value": "@concat(activity('SanityCheck').output.map.containername,'/',activity('SanityCheck').output.map.fullFilename)",
									"type": "Expression"
								},
								"FileNamePrefix": {
									"value": "@first(split(last(split(activity('SanityCheck').output.map.fullFilename,'/')),'.'))",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					},
					"ParamFilePath": {
						"type": "string"
					},
					"ParamFileName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParamsDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureFunctionConn')]",
				"[concat(variables('factoryId'), '/pipelines/Email Pusher')]",
				"[concat(variables('factoryId'), '/linkedServices/pharmacypocADLSconn')]",
				"[concat(variables('factoryId'), '/linkedServices/SparkClusterConn')]",
				"[concat(variables('factoryId'), '/pipelines/TriggerCreation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stage2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Curation Loading",
						"type": "HDInsightSpark",
						"dependsOn": [
							{
								"activity": "ParamsLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"rootPath": "jars",
							"entryFilePath": "azureCuration-1.0-SNAPSHOT.jar",
							"arguments": [
								"@activity('ParamsLookup').output.value[0].srcTbl",
								"@activity('ParamsLookup').output.value[0].tgtTbl",
								"@activity('ParamsLookup').output.value[0].tgtPath",
								"@concat('load_date=',formatDateTime(utcnow(),'yyyy-MM-dd'))"
							],
							"className": "com.prad.legend.blooper",
							"sparkJobLinkedService": {
								"referenceName": "pharmacypocblobconn",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "SparkClusterConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ParamsLookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ParamsDataset",
								"type": "DatasetReference",
								"parameters": {
									"paramFilePath": {
										"value": "@pipeline().parameters.ParamPath",
										"type": "Expression"
									},
									"paramFileName": {
										"value": "@pipeline().parameters.ParamName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"parameters": {
					"ParamPath": {
						"type": "string"
					},
					"ParamName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pharmacypocblobconn')]",
				"[concat(variables('factoryId'), '/linkedServices/SparkClusterConn')]",
				"[concat(variables('factoryId'), '/datasets/ParamsDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerCreation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TriggerCreation",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-16.southeastasia.logic.azure.com:443/workflows/cfbc939699034cd583f0813392e21340/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=eXPjXDn77yLzL6djv_LLVScsFHJo9GlwVM77-mBa-dc",
							"method": "POST",
							"headers": {},
							"body": {
								"RawFileName": "@{pipeline().parameters.RawFileName}",
								"TriggerLoc": "@pipeline().parameters.TriggerLoc",
								"FileNamePrefix": "@pipeline().parameters.FileNamePrefix"
							}
						}
					}
				],
				"parameters": {
					"TriggerLoc": {
						"type": "string"
					},
					"RawFileName": {
						"type": "string"
					},
					"FileNamePrefix": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParamsDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pharmacypocADLSconn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"paramFilePath": {
						"type": "string"
					},
					"paramFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().paramFileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().paramFilePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pharmacypocADLSconn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunctionConn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "https://yuhasanitycheck.azurewebsites.net",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunctionConn_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDIClusterconn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://pradeephdinsight.azurehdinsight.net",
					"userName": "[parameters('HDIClusterconn_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HDIClusterconn_password')]"
					},
					"isEspEnabled": false,
					"fileSystem": "clusterlogs",
					"linkedServiceName": {
						"referenceName": "pharmacypocADLSconn",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pharmacypocADLSconn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SparkClusterConn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://pradeepsparkcluster.azurehdinsight.net",
					"userName": "[parameters('SparkClusterConn_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SparkClusterConn_password')]"
					},
					"isEspEnabled": false,
					"fileSystem": "clusterlogs",
					"linkedServiceName": {
						"referenceName": "pharmacypocADLSconn",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pharmacypocADLSconn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/keyvaultPOCconn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('keyvaultPOCconn_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pharmacypocADLSconn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('pharmacypocADLSconn_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "keyvaultPOCconn",
							"type": "LinkedServiceReference"
						},
						"secretName": "yuhaadlspocconnstring"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/keyvaultPOCconn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pharmacypocblobconn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('pharmacypocblobconn_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/casesTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Stage1",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('casesTrigger_properties_Stage1_parameters_FileName')]",
							"FilePath": "[parameters('casesTrigger_properties_Stage1_parameters_FilePath')]",
							"ParamFilePath": "[parameters('casesTrigger_properties_Stage1_parameters_ParamFilePath')]",
							"ParamFileName": "[parameters('casesTrigger_properties_Stage1_parameters_ParamFileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/pharmacypoc/blobs/source/cases",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('casesTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Stage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/curationcasestrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Stage2",
							"type": "PipelineReference"
						},
						"parameters": {
							"ParamPath": "[parameters('curationcasestrigger_properties_Stage2_parameters_ParamPath')]",
							"ParamName": "[parameters('curationcasestrigger_properties_Stage2_parameters_ParamName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/pharmacypoc/blobs/triggers/stage2/total_cases",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('curationcasestrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Stage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deathsTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Stage1",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('deathsTrigger_properties_Stage1_parameters_FileName')]",
							"FilePath": "[parameters('deathsTrigger_properties_Stage1_parameters_FilePath')]",
							"ParamFilePath": "[parameters('deathsTrigger_properties_Stage1_parameters_ParamFilePath')]",
							"ParamFileName": "[parameters('deathsTrigger_properties_Stage1_parameters_ParamFileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/pharmacypoc/blobs/source/deaths",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('deathsTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Stage1')]"
			]
		}
	]
}